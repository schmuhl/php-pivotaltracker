<?phpclass PivotalPerson {    public $kind;    public $id;    public $name;    public $email;    public $initials;    public $username;    /**     * Copy the values of another object into this object     * @param $object     */    public function copy ( $object ) {        $vars = get_class_vars("PivotalPerson");        foreach ( $vars as $var=>$value ) {  // loop through and set all of the variables            $this->$var = $object->$var;        }    }    /**     * Get the stories for this person for a given project     * @param $project_id     * @return array An array of PivotalStory objects     */	public function getStories ( $project_id ) {        if ( empty($project_id) ) return null;		$project = new PivotalProject ( $project_id );		$stories = $project->getStoriesByperson();        return $stories;	}    /**     * Get the poeple for a given project     * @param $project_id     * @return array An array of PivotalPerson objects     */    public static function getPeople ( $project_id ) {        if ( !is_numeric($project_id) ) return null;        $result = Pivotal::callAPI("projects/$project_id/memberships",'GET');        if ( is_array($result) ) {            $people = array();            foreach ( $result as $i ) {                $person = new PivotalPerson();                $person->copy($i->person);                $people[$person->id] = $person;            }            //print_r($people); die();            return $people;        }        error_log("Could not get project membership: (".print_r($result,true).")");        return null;    }    /**     * Custom function to sort PivotalPerson objects by name     * @param $a PivotalPerson     * @param $b PivotalPerson     */    public static function sortByName ( $a, $b ) {        return $a->initials < $b->initials;        print_r($a); die();    }}?>